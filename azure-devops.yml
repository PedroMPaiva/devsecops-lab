trigger:
- main

pool:
  vmImage: 'ubuntu-latest'

stages:
- stage: Build
  displayName: 'Build & Scan Stage'
  jobs:
  - job: SecurityScan
    displayName: 'Run SAST and DAST Scans'
    steps:
    - task: UsePythonVersion@0
      displayName: 'Set up Python 3.10'
      inputs:
        versionSpec: '3.10'

    - script: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
      displayName: 'Install dependencies'

    - script: |
        bandit -r . -f txt -o bandit-report.txt
      displayName: 'Run SAST scan with Bandit'
      continueOnError: true

    - script: |
        export FLASK_APP=app.py
        flask run &
        sleep 15
        ./zap.sh -t http://127.0.0.1:5000 -r zap-report.html
      displayName: 'Run DAST scan with OWASP ZAP'
      continueOnError: true

- stage: Deploy
  displayName: 'Deploy to AWS Stage'
  dependsOn: Build
  jobs:
  - job: TerraformDeploy
    displayName: 'Deploy Infra with Terraform'
    steps:
    - task: TerraformInstaller@1
      displayName: 'Install Terraform'
      inputs:
        terraformVersion: 'latest'

    - task: AWSShellScript@1
      displayName: 'Run Terraform Init & Apply'
      inputs:
        awsCredentials: 'aws-azure-connection'
        regionName: 'us-east-1'
        scriptType: 'bash'
        script: |
          echo "Executing in directory: $(System.DefaultWorkingDirectory)/infra"
          cd $(System.DefaultWorkingDirectory)/infra
          
          echo "Running Terraform Init..."
          terraform init \
            -backend-config="bucket=devsecops-lab-tfstate-pedrompaiva" \
            -backend-config="key=terraform.tfstate" \
            -backend-config="region=us-east-1"

          echo "Running Terraform Apply..."
          terraform apply -auto-approve